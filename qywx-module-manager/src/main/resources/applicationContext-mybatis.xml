<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">

	<!-- 数据源druid -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${druid.pool.size.init}" />
		<property name="minIdle" value="${druid.pool.size.min}" />
		<property name="maxActive" value="${druid.pool.size.max}" />
		<property name="maxWait" value="60000" />
		<!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
		<property name="filters" value="stat,wall,log4j" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name = "timeBetweenEvictionRunsMillis" value ="${druid.pool.timeBetweenEvictionRunsMillis}" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name = "minEvictableIdleTimeMillis" value ="${druid.pool.minEvictableIdleTimeMillis}" />
		<property name = "validationQuery" value = "select now()" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="false" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<property name = "maxOpenPreparedStatements" value ="${druid.pool.maxOpenPreparedStatements}" />
		<!-- 打开 removeAbandoned 功能 -->
		<property name = "removeAbandoned" value = "${druid.pool.removeAbandoned}" />
		<!-- 1800 秒，也就是 30 分钟 -->
		<property name = "removeAbandonedTimeout" value ="${druid.pool.removeAbandonedTimeout}" />
		<!-- 关闭 abanded 连接时输出错误日志 -->
		<property name = "logAbandoned" value = "${druid.pool.logAbandoned}" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis.xml" />
		<!--<property name="mapperLocations" value="classpath:mybatis/mapper/*.xml" />-->
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="net.oschina.kjtang.qywx.*.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

</beans>